"use strict";

var getTeamsInfo = require("./team-info");

var sportVu = require("./sport-vu");
var stats = require("./stats");
var synergy = require("./synergy");

var teams = require("../data/teams.json");
var players = require("./util/build-players")(require("../data/players.json"));

var nba = {
  // namespaces for NBA API endpoints
  stats: stats,
  sportVu: sportVu,
  synergy: synergy,

  // in-memory data to help with constructing queries
  players: players,
  teams: teams,

  // helpers for searching in-memory data
  teamIdFromName: teamIdFromName,
  playerIdFromName: playerIdFromName,
  findPlayer: findPlayer,
  searchPlayers: searchPlayers,

  // update in-memory data
  updatePlayers: updatePlayers,
  updateTeams: updateTeams
};

function teamIdFromName(name) {
  var n = name.toLowerCase();
  var team = nba.teams.find(function (t) {
    return t.abbreviation.toLowerCase() === n || t.location.toLowerCase() === n || t.teamName.toLowerCase() === n || t.simpleName.toLowerCase() === n;
  });
  return team ? team.teamId : null;
}

function playerIdFromName(name) {
  var p = findPlayer(name);
  return p ? p.playerId : null;
}

function findPlayer(str) {
  str = str.toLowerCase();
  return nba.players.find(function (p) {
    return p.fullName.toLowerCase().includes(str);
  });
}

function searchPlayers(str) {
  str = str.toLowerCase();
  return nba.players.filter(function (p) {
    return p.fullName.toLowerCase().includes(str);
  });
}

function updatePlayers() {
  return nba.stats.playersInfo().then(function (data) {
    nba.players = data;
    return data;
  });
}

function updateTeams() {
  return getTeamsInfo().then(function (data) {
    nba.teams = data;
    return data;
  });
}

module.exports = nba;